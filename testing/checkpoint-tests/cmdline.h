/* cmdline.h */

/* File autogenerated by gengetopt version 2.17  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "lwfs_config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "lwfs-tests"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "0.1"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  int num_trials_arg;	/* The number of trials per experiment (default='1').  */
  char * num_trials_orig;	/* The number of trials per experiment original value given at command line.  */
  const char *num_trials_help; /* The number of trials per experiment help description.  */
  int ops_per_trial_arg;	/* The number of operations in a trial (default='1').  */
  char * ops_per_trial_orig;	/* The number of operations in a trial original value given at command line.  */
  const char *ops_per_trial_help; /* The number of operations in a trial help description.  */
  int bytes_per_op_arg;	/* The number of bytes/object (default='1024').  */
  char * bytes_per_op_orig;	/* The number of bytes/object original value given at command line.  */
  const char *bytes_per_op_help; /* The number of bytes/object help description.  */
  int async_flag;	/* Asynchronous tests (default=off).  */
  const char *async_help; /* Asynchronous tests help description.  */
  int in_transit_arg;	/* Number of requests in transit (default='10').  */
  char * in_transit_orig;	/* Number of requests in transit original value given at command line.  */
  const char *in_transit_help; /* Number of requests in transit help description.  */
  char * result_file_arg;	/* Where to store results.  */
  char * result_file_orig;	/* Where to store results original value given at command line.  */
  const char *result_file_help; /* Where to store results help description.  */
  char * result_file_mode_arg;	/* Write mode for the result (default='write').  */
  char * result_file_mode_orig;	/* Write mode for the result original value given at command line.  */
  const char *result_file_mode_help; /* Write mode for the result help description.  */
  char * scratch_file_arg;	/* Where to write scratch data (default='/usr/tmp/scratch').  */
  char * scratch_file_orig;	/* Where to write scratch data original value given at command line.  */
  const char *scratch_file_help; /* Where to write scratch data help description.  */
  int remove_file_flag;	/* Remove the file when finished (default=off).  */
  const char *remove_file_help; /* Remove the file when finished help description.  */
  int verbose_arg;	/* Debug level of logger [0-5] (default='5').  */
  char * verbose_orig;	/* Debug level of logger [0-5] original value given at command line.  */
  const char *verbose_help; /* Debug level of logger [0-5] help description.  */
  char * logfile_arg;	/* Path to logfile.  */
  char * logfile_orig;	/* Path to logfile original value given at command line.  */
  const char *logfile_help; /* Path to logfile help description.  */
  long authr_pid_arg;	/* PID of the authr server (default='124').  */
  char * authr_pid_orig;	/* PID of the authr server original value given at command line.  */
  const char *authr_pid_help; /* PID of the authr server help description.  */
  long authr_nid_arg;	/* NID of the authr server (default='0').  */
  char * authr_nid_orig;	/* NID of the authr server original value given at command line.  */
  const char *authr_nid_help; /* NID of the authr server help description.  */
  int authr_cache_caps_flag;	/* Cache caps on the client (default=off).  */
  const char *authr_cache_caps_help; /* Cache caps on the client help description.  */
  char * ss_server_file_arg;	/* Path to a file with a list of storage servers.  */
  char * ss_server_file_orig;	/* Path to a file with a list of storage servers original value given at command line.  */
  const char *ss_server_file_help; /* Path to a file with a list of storage servers help description.  */
  int ss_num_servers_arg;	/* Number of servers to use from the server file (default='1').  */
  char * ss_num_servers_orig;	/* Number of servers to use from the server file original value given at command line.  */
  const char *ss_num_servers_help; /* Number of servers to use from the server file help description.  */
  int ss_pid_arg;	/* The PID of a single remote storage storage server (ignored if using --ss=server-file) (default='122').  */
  char * ss_pid_orig;	/* The PID of a single remote storage storage server (ignored if using --ss=server-file) original value given at command line.  */
  const char *ss_pid_help; /* The PID of a single remote storage storage server (ignored if using --ss=server-file) help description.  */
  long ss_nid_arg;	/* The NID of a single remote storage server (ignored if using --ss-server-file) (default='0').  */
  char * ss_nid_orig;	/* The NID of a single remote storage server (ignored if using --ss-server-file) original value given at command line.  */
  const char *ss_nid_help; /* The NID of a single remote storage server (ignored if using --ss-server-file) help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int num_trials_given ;	/* Whether num-trials was given.  */
  int ops_per_trial_given ;	/* Whether ops-per-trial was given.  */
  int bytes_per_op_given ;	/* Whether bytes-per-op was given.  */
  int async_given ;	/* Whether async was given.  */
  int in_transit_given ;	/* Whether in-transit was given.  */
  int result_file_given ;	/* Whether result-file was given.  */
  int result_file_mode_given ;	/* Whether result-file-mode was given.  */
  int scratch_file_given ;	/* Whether scratch-file was given.  */
  int remove_file_given ;	/* Whether remove-file was given.  */
  int verbose_given ;	/* Whether verbose was given.  */
  int logfile_given ;	/* Whether logfile was given.  */
  int authr_pid_given ;	/* Whether authr-pid was given.  */
  int authr_nid_given ;	/* Whether authr-nid was given.  */
  int authr_cache_caps_given ;	/* Whether authr-cache-caps was given.  */
  int ss_server_file_given ;	/* Whether ss-server-file was given.  */
  int ss_num_servers_given ;	/* Whether ss-num-servers was given.  */
  int ss_pid_given ;	/* Whether ss-pid was given.  */
  int ss_nid_given ;	/* Whether ss-nid was given.  */

} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_string (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name);
int cmdline_parser_string2 (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name,
  int override, int initialize, int check_required);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);

extern char *cmdline_parser_result_file_mode_values[] ;	/* Possible values for result-file-mode.  */


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
