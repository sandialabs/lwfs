/* portals-xfer-opts.h */

/* File autogenerated by gengetopt version 2.17  */

#ifndef PORTALS_XFER_OPTS_H
#define PORTALS_XFER_OPTS_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "lwfs-tests"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "0.1"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  int len_arg;	/* The size of an input buffer (default='1').  */
  char * len_orig;	/* The size of an input buffer original value given at command line.  */
  const char *len_help; /* The size of an input buffer help description.  */
  int debug_flag;	/* Debug flag (default=off).  */
  const char *debug_help; /* Debug flag help description.  */
  int count_arg;	/* The number of experiments (default='1').  */
  char * count_orig;	/* The number of experiments original value given at command line.  */
  const char *count_help; /* The number of experiments help description.  */
  int num_reqs_arg;	/* The number of reqs/trial (default='1').  */
  char * num_reqs_orig;	/* The number of reqs/trial original value given at command line.  */
  const char *num_reqs_help; /* The number of reqs/trial help description.  */
  char * result_file_arg;	/* Where to store results.  */
  char * result_file_orig;	/* Where to store results original value given at command line.  */
  const char *result_file_help; /* Where to store results help description.  */
  char * result_file_mode_arg;	/* Write mode for the result (default='a').  */
  char * result_file_mode_orig;	/* Write mode for the result original value given at command line.  */
  const char *result_file_mode_help; /* Write mode for the result help description.  */
  int server_flag;	/* Flag that identifies the server process (default=off).  */
  const char *server_help; /* Flag that identifies the server process help description.  */
  #ifdef HAVE_LONG_LONG
  long long int server_nid_arg;	/* The network ID of the server (default=0).  */
  #else
  long server_nid_arg;	/* The network ID of the server (default=0).  */
  #endif
  char * server_nid_orig;	/* The network ID of the server original value given at command line.  */
  const char *server_nid_help; /* The network ID of the server help description.  */
  int server_pid_arg;	/* The process ID of the server (default='128').  */
  char * server_pid_orig;	/* The process ID of the server original value given at command line.  */
  const char *server_pid_help; /* The process ID of the server help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int len_given ;	/* Whether len was given.  */
  int debug_given ;	/* Whether debug was given.  */
  int count_given ;	/* Whether count was given.  */
  int num_reqs_given ;	/* Whether num-reqs was given.  */
  int result_file_given ;	/* Whether result-file was given.  */
  int result_file_mode_given ;	/* Whether result-file-mode was given.  */
  int server_given ;	/* Whether server was given.  */
  int server_nid_given ;	/* Whether server-nid was given.  */
  int server_pid_given ;	/* Whether server-pid was given.  */

} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_string (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name);
int cmdline_parser_string2 (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name,
  int override, int initialize, int check_required);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);

extern char *cmdline_parser_result_file_mode_values[] ;	/* Possible values for result-file-mode.  */


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* PORTALS_XFER_OPTS_H */
