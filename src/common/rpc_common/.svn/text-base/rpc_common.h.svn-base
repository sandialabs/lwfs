/*-------------------------------------------------------------------------*/
/**  
 *   @file rpc_common.h
 * 
 *   @brief Prototypes for the RPC methods used by both clients and servers.
 * 
 *   @author Ron Oldfield (raoldfi\@sandia.gov)
 *   @author Rolf Riesen (rolf\@cs.sandia.gov)
 *   $Revision$
 *   $Date$
 */

#ifndef _LWFS_RPC_COMMON_H_
#define _LWFS_RPC_COMMON_H_

#include "common/types/types.h"
#include "rpc_debug.h"


#ifdef __cplusplus
extern "C" {
#endif

#if defined(__STDC__) || defined(__cplusplus)

    /**
     * @brief Initialize the RPC mechanism. 
     *
     * The <tt>\ref lwfs_rpc_init</tt> method 
     * initializes the rpc library.  
     *
     * @param rpc_transport @input_type  Identifies the transport mechanism
     *                                   to use for communication. 
     * @param rpc_encode    @input_type  Identifies the mechanism used to 
     *                                   encode the rpc control messages. 
	 *
     * @return \ref LWFS_OK Indicates sucess. 
     * @return \ref LWFS_ERR_RPC Indicates failure in the LWFS RPC library. 
     */
    extern int lwfs_rpc_init(
            const lwfs_rpc_transport rpc_transport, 
            const lwfs_rpc_encode rpc_encode); 

    /**
     * @brief Finalize the RPC mechanism. 
     *
     * The \b lwfs_rpc_fini method performs any cleanup
     * required by the underlying communication protocol 
     * before exiting the client application. 
	 *
     * @return \ref LWFS_OK Indicates sucess. 
     * @return \ref LWFS_ERR_RPC Indicates failure in the LWFS RPC library. 
     */
    extern int lwfs_rpc_fini(void);

    /**
     * @brief Get the process ID of this process. 
     *
     * @ingroup rpc_funcs
     *
     * The <tt>\ref lwfs_get_my_pid</tt> method gets the 
	 * \ref lwfs_remote_pid "process id" of the calling process. 
     * 
     * @param id @output_type If successful, points to the \ref lwfs_remote_pid "process ID" 
	 *                   of the calling process. Undefined otherwise.
     *
     * @return \ref LWFS_OK Indicates sucess. 
     * @return \ref LWFS_ERR_RPC Indicates failure in the LWFS RPC library. 
	 *
     */
    extern int lwfs_get_id(
            lwfs_remote_pid *id);

#ifdef __APPLE__
#undef HAVE_XDR_SIZEOF /* configure test is broken on MacOS */
#endif 

#ifndef HAVE_XDR_SIZEOF
  unsigned long xdr_sizeof( xdrproc_t, void* );
#endif

#else /* K&R C */
#endif



#ifdef __cplusplus
}
#endif

#endif 

