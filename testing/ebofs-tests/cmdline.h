/* cmdline.h */

/* File autogenerated by gengetopt version 2.17  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "lwfs-tests"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "0.1"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  int oid_arg;	/* The object ID to use (default='1').  */
  char * oid_orig;	/* The object ID to use original value given at command line.  */
  const char *oid_help; /* The object ID to use help description.  */
  int offset_arg;	/* The offset into an object (default='0').  */
  char * offset_orig;	/* The offset into an object original value given at command line.  */
  const char *offset_help; /* The offset into an object help description.  */
  char * data_arg;	/* Character string stored in an object (default='hello world').  */
  char * data_orig;	/* Character string stored in an object original value given at command line.  */
  const char *data_help; /* Character string stored in an object help description.  */
  char * devfs_arg;	/* Path to a block-device file (default='ebofs.disk').  */
  char * devfs_orig;	/* Path to a block-device file original value given at command line.  */
  const char *devfs_help; /* Path to a block-device file help description.  */
  int trunc_size_arg;	/* Size (bytes) of a file after the trunc test (default='32').  */
  char * trunc_size_orig;	/* Size (bytes) of a file after the trunc test original value given at command line.  */
  const char *trunc_size_help; /* Size (bytes) of a file after the trunc test help description.  */
  char * attr_name_arg;	/* Name of an attribute (default='testattr').  */
  char * attr_name_orig;	/* Name of an attribute original value given at command line.  */
  const char *attr_name_help; /* Name of an attribute help description.  */
  int attr_val_arg;	/* Value to store in an attribute (default='73').  */
  char * attr_val_orig;	/* Value to store in an attribute original value given at command line.  */
  const char *attr_val_help; /* Value to store in an attribute help description.  */
  int testid_arg;	/* ID of the test (default='2').  */
  char * testid_orig;	/* ID of the test original value given at command line.  */
  const char *testid_help; /* ID of the test help description.  */
  int verbose_arg;	/* Debug level of logger [0-5] (default='5').  */
  char * verbose_orig;	/* Debug level of logger [0-5] original value given at command line.  */
  const char *verbose_help; /* Debug level of logger [0-5] help description.  */
  char * logfile_arg;	/* Path to logfile.  */
  char * logfile_orig;	/* Path to logfile original value given at command line.  */
  const char *logfile_help; /* Path to logfile help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int oid_given ;	/* Whether oid was given.  */
  int offset_given ;	/* Whether offset was given.  */
  int data_given ;	/* Whether data was given.  */
  int devfs_given ;	/* Whether devfs was given.  */
  int trunc_size_given ;	/* Whether trunc-size was given.  */
  int attr_name_given ;	/* Whether attr-name was given.  */
  int attr_val_given ;	/* Whether attr-val was given.  */
  int testid_given ;	/* Whether testid was given.  */
  int verbose_given ;	/* Whether verbose was given.  */
  int logfile_given ;	/* Whether logfile was given.  */

} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_string (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name);
int cmdline_parser_string2 (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name,
  int override, int initialize, int check_required);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
