/* cmdline_default.h */

/* File autogenerated by gengetopt version 2.17  */

#ifndef CMDLINE_DEFAULT_H
#define CMDLINE_DEFAULT_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "authr-server"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "0.1"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  int num_reqs_arg;	/* Number of requests before exit (default='-1').  */
  char * num_reqs_orig;	/* Number of requests before exit original value given at command line.  */
  const char *num_reqs_help; /* Number of requests before exit help description.  */
  int authr_pid_arg;	/* PID to use for the authorization service (default='124').  */
  char * authr_pid_orig;	/* PID to use for the authorization service original value given at command line.  */
  const char *authr_pid_help; /* PID to use for the authorization service help description.  */
  int use_threads_flag;	/* Flag to use threads for the server (default=off).  */
  const char *use_threads_help; /* Flag to use threads for the server help description.  */
  int daemon_flag;	/* Flag to run server as a daemon (default=off).  */
  const char *daemon_help; /* Flag to run server as a daemon help description.  */
  int authr_verify_caps_flag;	/* Flag to verify all capabilities (default=on).  */
  const char *authr_verify_caps_help; /* Flag to verify all capabilities help description.  */
  int authr_db_clear_flag;	/* Flag to clear the authorization database (default=off).  */
  const char *authr_db_clear_help; /* Flag to clear the authorization database help description.  */
  char * authr_db_path_arg;	/* Path to the db file (default='authr.db').  */
  char * authr_db_path_orig;	/* Path to the db file original value given at command line.  */
  const char *authr_db_path_help; /* Path to the db file help description.  */
  int authr_db_recover_flag;	/* Flag to recover the database (default=off).  */
  const char *authr_db_recover_help; /* Flag to recover the database help description.  */
  int authr_trace_flag;	/* Enable tracing (default=off).  */
  const char *authr_trace_help; /* Enable tracing help description.  */
  char * authr_tracefile_arg;	/* Path to the trace file (default='authr-trace.sddf').  */
  char * authr_tracefile_orig;	/* Path to the trace file original value given at command line.  */
  const char *authr_tracefile_help; /* Path to the trace file help description.  */
  int authr_traceftype_arg;	/* File type of tracefile (0=binary, 1=ASCII) (default='0').  */
  char * authr_traceftype_orig;	/* File type of tracefile (0=binary, 1=ASCII) original value given at command line.  */
  const char *authr_traceftype_help; /* File type of tracefile (0=binary, 1=ASCII) help description.  */
  int verbose_arg;	/* Debug level of logger [0-5] (default='5').  */
  char * verbose_orig;	/* Debug level of logger [0-5] original value given at command line.  */
  const char *verbose_help; /* Debug level of logger [0-5] help description.  */
  char * logfile_arg;	/* Path to logfile.  */
  char * logfile_orig;	/* Path to logfile original value given at command line.  */
  const char *logfile_help; /* Path to logfile help description.  */
  int tp_init_thread_count_arg;	/* Initial number of thread in the pool (default='1').  */
  char * tp_init_thread_count_orig;	/* Initial number of thread in the pool original value given at command line.  */
  const char *tp_init_thread_count_help; /* Initial number of thread in the pool help description.  */
  int tp_min_thread_count_arg;	/* Minimum number of thread in the pool (default='1').  */
  char * tp_min_thread_count_orig;	/* Minimum number of thread in the pool original value given at command line.  */
  const char *tp_min_thread_count_help; /* Minimum number of thread in the pool help description.  */
  int tp_max_thread_count_arg;	/* Maximum number of thread in the pool (default='1').  */
  char * tp_max_thread_count_orig;	/* Maximum number of thread in the pool original value given at command line.  */
  const char *tp_max_thread_count_help; /* Maximum number of thread in the pool help description.  */
  int tp_low_watermark_arg;	/* Request queue size at which threads are removed from the pool (default='1').  */
  char * tp_low_watermark_orig;	/* Request queue size at which threads are removed from the pool original value given at command line.  */
  const char *tp_low_watermark_help; /* Request queue size at which threads are removed from the pool help description.  */
  int tp_high_watermark_arg;	/* Request queue size at which threads are added to the pool (default='1').  */
  char * tp_high_watermark_orig;	/* Request queue size at which threads are added to the pool original value given at command line.  */
  const char *tp_high_watermark_help; /* Request queue size at which threads are added to the pool help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int num_reqs_given ;	/* Whether num-reqs was given.  */
  int authr_pid_given ;	/* Whether authr-pid was given.  */
  int use_threads_given ;	/* Whether use-threads was given.  */
  int daemon_given ;	/* Whether daemon was given.  */
  int authr_verify_caps_given ;	/* Whether authr-verify-caps was given.  */
  int authr_db_clear_given ;	/* Whether authr-db-clear was given.  */
  int authr_db_path_given ;	/* Whether authr-db-path was given.  */
  int authr_db_recover_given ;	/* Whether authr-db-recover was given.  */
  int authr_trace_given ;	/* Whether authr-trace was given.  */
  int authr_tracefile_given ;	/* Whether authr-tracefile was given.  */
  int authr_traceftype_given ;	/* Whether authr-traceftype was given.  */
  int verbose_given ;	/* Whether verbose was given.  */
  int logfile_given ;	/* Whether logfile was given.  */
  int tp_init_thread_count_given ;	/* Whether tp-init-thread-count was given.  */
  int tp_min_thread_count_given ;	/* Whether tp-min-thread-count was given.  */
  int tp_max_thread_count_given ;	/* Whether tp-max-thread-count was given.  */
  int tp_low_watermark_given ;	/* Whether tp-low-watermark was given.  */
  int tp_high_watermark_given ;	/* Whether tp-high-watermark was given.  */

} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_string (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name);
int cmdline_parser_string2 (const char *cmdline, struct gengetopt_args_info *args_info,
  const char *prog_name,
  int override, int initialize, int check_required);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_DEFAULT_H */
