/**
 *   @file types.h
 *
 *   @brief Type definitions and method prototypes for
 *   the LWFS.
 *
 *   This file includes the necessary data structures
 *   required by an application that uses the LWFS.
 *
 *   @author Ron Oldfield (raoldfi\@sandia.gov)
 *   $Revision: 1064 $
 *   $Date: 2007-01-19 10:05:13 -0700 (Fri, 19 Jan 2007) $
 *
 */

#ifndef _TYPES_H_
#define _TYPES_H_

#include <stdio.h>
#include "common/types/xdr_types.h"    /* types generated by rpcgen */
#include "common/types/fprint_types.h" /* */

#ifdef __cplusplus
extern "C" {
#endif


extern lwfs_oid LWFS_OID_ANY;
extern lwfs_oid LWFS_OID_ZERO;

#define UUID_TO_UINT64(u) \
        ((uint64_t)( \
	     (*((uint64_t *)&(u[0]))) \
	    ^(*((uint64_t *)&(u[8]))) ))

#define UUID_TO_UINT32(u) \
        ((uint32_t)(\
	     (*((uint32_t *)&(u[0]))) \
	    ^(*((uint32_t *)&(u[4]))) \
	    ^(*((uint32_t *)&(u[8]))) \
	    ^(*((uint32_t *)&(u[12]))) ))


#if defined(__STDC__) || defined(__cplusplus)

    /**
     * @brief Release data structures in an lwfs_acl
     *
     * @param acl     @input_type Access-control list.
     */
    extern void lwfs_acl_free(
	    lwfs_uid_array *acl);

    extern int lwfs_is_oid_any(const lwfs_oid oid);

    extern int lwfs_is_oid_zero(const lwfs_oid oid);

    extern int lwfs_set_oid_any(lwfs_oid oid);

    extern void lwfs_clear_oid(lwfs_oid oid);

    extern char *lwfs_oid_to_string(const lwfs_oid oid, char *ostr);

    extern void lwfs_string_to_oid(const char *ostr, lwfs_oid oid);

#else /* K&R C */
    extern void lwfs_acl_free();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif
